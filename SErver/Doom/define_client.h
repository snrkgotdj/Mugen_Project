#pragma once

#define DIR_RIGHT 1 
#define DIR_LEFT -1

enum MAP_STATE
{
	MAP_KOREA,
	MAP_STADIUM,
	MAP_TEMPLE,
	MAP_CITY,
	MAP_END
};

enum NANAYA_STATE
{
	NANAYA_IDLE,
	NANAYA_WALK,
	NANAYA_RIGHTWALK,
	NANAYA_LEFTWALK,
	NANAYA_BACKWALK,
	NANAYA_SIT,

	NANAYA_ATTACK_Light,
	NANAYA_ATTACK_Medium,
	NANAYA_ATTACK_Medium_Addition,
	NANAYA_ATTACK_Power,

	NANAYA_ATTACK_SIT_Z,
	NANAYA_ATTACK_SIT_X,

	NANAYA_ATTACK_JUMP_Z,
	NANAYA_ATTACK_JUMP_X,
	NANAYA_ATTACK_JUMP_C,


	NANAYA_FRONT_DASH,
	NANAYA_BACK_DASH,
	NANAYA_BACK_DUMBLING,

	NANAYA_JUMP_STAY,
	NANAYA_JUMP_FRONT,
	NANAYA_JUMP_BACK,
	NANAYA_JUMP_FORNT_DASH,
	NANAYA_JUMP_BACK_DASH,

	NANAYA_HITTED_MIDDLE,
	NANAYA_HITTED_UP,
	NANAYA_HITTED_DOWN,

	NANAYA_KNOCKDOWN,
	NANAYA_STANDUP,

	NANAYA_PALJUMCHOONG,
	NANAYA_CHILYA,
	NANAYA_PALCHUN,
	NANAYA_YUKTO,
	NANAYA_GUIKSYNANAYA,
	NANAYA_GUIKSYNANAYA_FAIL,
	NANAYA_GUIKSYNANAYA_HIT,
	NANAYA_GUARD,

	NANAYA_END
};

enum KYO_STATE
{
	//Default
	KYO_IDLE,
	KYO_FRONTWALK,
	KYO_BACKWALK,
	KYO_FRONTDASH,
	KYO_BACKDASH,
	KYO_CROUCH,
	KYO_JUMP_UP,
	KYO_JUMP_DOWN,
	KYO_JUMP_FRONT,
	KYO_JUMP_BACK,
	KYO_ROLL,
	KYO_GUARD,

	//Normal
	KYO_LP,
	KYO_SP,
	KYO_LK,
	KYO_SK,
	KYO_TYPE75_KAI,
	KYO_REDKICK,
	KYO_TYPE100_ONIYAKI,
	KYO_UTYPE108_OROCHINAGI,
	KYO_TYPE114_ARAGAMI,
	KYO_TYPE115_DOKUGAMI,
	KYO_TYPE125_NANASE,
	KYO_TYPE127_YANOSABI,
	KYO_TYPE128_KONOKIZU,
	KYO_TYPE182,
	KYO_TYPE401_TSUMIYOMI,
	KYO_TYPE402_BATSUYOMI,
	KYO_TYPE427_HIKIGANE_L,
	KYO_TYPE427_HIKIGANE_S,
	KYO_OUTTYPE_GOUFU,
	KYO_OUTTYPE_MIGIRI,
	KYO_NOTYPE,

	//Crouch
	KYO_CROUCH_LP,
	KYO_CROUCH_SP,
	KYO_CROUCH_LK,
	KYO_CROUCH_SK,
	KYO_TYPE88,

	//Aerial
	KYO_JUMP_LP,
	KYO_JUMP_SP,
	KYO_JUMP_LK,
	KYO_JUMP_SK,
	KYO_OUTTYPE_NARAKU,

	//Hit
	KYO_HIT_DOWN,
	KYO_HIT_MID,
	KYO_HIT_UP,
	KYO_HIT_AERIAL,
	KYO_HIT_KNOCKDOWN,
	KYO_HIT_STANDUP,
	KYO_HIT_STANDUP_QUICK,

	KYO_END
};

enum IORI_STATE
{
	IORI_IDLE,
	IORI_FRONTWALK,
	IORI_BACKWALK,
	IORI_FRONTDASH,
	IORI_BACKDASH,
	IORI_CROUCH,
	IORI_JUMP_UP,
	IORI_JUMP_DOWN,
	IORI_JUMP_FRONT,
	IORI_JUMP_BACK,
	IORI_ROLL,
	IORI_GUARD,

	//Normal
	IORI_LP,
	IORI_SP,
	IORI_LK,
	IORI_SK,
	IORI_OUTTYPE_YUMEBIKI_A,
	IORI_OUTTYPE_YUMEBIKI_B,
	IORI_OUTTYPE_GOUFU,
	IORI_TYPE100_ONIYAKI,
	IORI_TYPE108_YAMIBARAI,
	IORI_TYPE127_AOIHANA_A,
	IORI_TYPE127_AOIHANA_B,
	IORI_TYPE127_AOIHANA_C,
	IORI_TYPE212_KOTOTSUKI_START,
	IORI_TYPE212_KOTOTSUKI_FAIL,
	IORI_TYPE212_KOTOTSUKI_SUCCESS,
	IORI_KUZUKAZE_START,
	IORI_KUZUKAZE_FAIL,
	IORI_KUZUKAZE_SUCCESS,
	IORI_KTYPE1211_YAOTOME_START,
	IORI_KTYPE1211_YAOTOME,
	IORI_UTYPE316_SAIKA,
	IORI_UTYPE1029_HOMURABOTOGI_START,
	IORI_UTYPE1029_HOMURABOTOGI,

	IORI_CROUCH_LP,
	IORI_CROUCH_SP,
	IORI_CROUCH_LK,
	IORI_CROUCH_SK,

	IORI_JUMP_LP,
	IORI_JUMP_SP,
	IORI_JUMP_LK,
	IORI_JUMP_SK,
	IORI_OUTTYPE_YURIORI,

	IORI_HIT_DOWN,
	IORI_HIT_MID,
	IORI_HIT_UP,
	IORI_HIT_AERIAL,
	IORI_HIT_KNOCKDOWN,
	IORI_HIT_STANDUP,
	IORI_HIT_STANDUP_QUICK,

	IORI_END
};

enum HIT_STATE
{
	HIT_UP,
	HIT_MIDDLE,
	HIT_DOWN,
	HIT_CATCH,
	HIT_AIRUP,
	HIT_KNOCKDOWN,
	HIT_END
};